basePath: /api/v1
definitions:
  model.Book:
    properties:
      author:
        example: Preeti Shenoy
        type: string
      desc:
        example: Book 1
        type: string
      id:
        example: b1
        type: string
      title:
        example: A Place Called Home
        type: string
    type: object
  response.JSONBadReqResult:
    properties:
      code:
        example: 400
        type: integer
      data: {}
      message:
        example: Wrong Parameter
        type: string
    type: object
  response.JSONIntServerErrReqResult:
    properties:
      code:
        example: 500
        type: integer
      data: {}
      message:
        example: Error Database
        type: string
    type: object
  response.JSONSuccessResult:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: Success
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example Book API
  version: "1.0"
paths:
  /book:
    post:
      consumes:
      - application/json
      description: Create a single book by providing title, author, and desc
      parameters:
      - description: Sample payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/model.Book'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: Create a single book
  /book/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a single book by providing its ID
      parameters:
      - description: Sample payload
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/model.Book'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: Delete a single book
    get:
      consumes:
      - application/json
      description: Get a single book by providing its ID
      parameters:
      - description: Sample payload
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/model.Book'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: Get a single book
    put:
      consumes:
      - application/json
      description: Update a single book by providing title, author, and desc
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Sample payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/model.Book'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: Update a single book
  /books:
    get:
      consumes:
      - application/json
      description: Create multiple books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/model.Book'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: Get multiple books
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
